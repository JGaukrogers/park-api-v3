"""photo url, duplicate id, new types, tags

Revision ID: 9ad8cd0f3b0d
Revises: c4f85305ddee
Create Date: 2024-05-14 06:46:51.653360

"""

import sqlalchemy as sa
import sqlalchemy_utc
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9ad8cd0f3b0d'
down_revision = 'c4f85305ddee'
branch_labels = None
depends_on = None


old_parking_site_types: list[str] = [
    'ON_STREET',
    'OFF_STREET_PARKING_GROUND',
    'UNDERGROUND',
    'CAR_PARK',
    'WALL_LOOPS',
    'STANDS',
    'LOCKERS',
    'SHED',
    'TWO_TIER',
    'BUILDING',
    'OTHER',
]

new_parking_site_types: list[str] = [
    'ON_STREET',
    'OFF_STREET_PARKING_GROUND',
    'UNDERGROUND',
    'CAR_PARK',
    'GENERIC_BIKE',
    'WALL_LOOPS',
    'SAFE_WALL_LOOPS',
    'STANDS',
    'LOCKERS',
    'SHED',
    'TWO_TIER',
    'BUILDING',
    'FLOOR',
    'OTHER',
]


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'tag',
        sa.Column('parking_site_id', sa.BigInteger(), nullable=False),
        sa.Column('value', sa.String(length=256), nullable=False),
        sa.Column('id', sa.BigInteger(), nullable=False),
        sa.Column('created_at', sqlalchemy_utc.sqltypes.UtcDateTime(timezone=True), nullable=False),
        sa.Column('modified_at', sqlalchemy_utc.sqltypes.UtcDateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(['parking_site_id'], ['parking_site.id'], name=op.f('fk_tag_parking_site_id')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_tag')),
        mysql_charset='utf8mb4',
        mysql_collate='utf8mb4_unicode_ci'
    )
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tag_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_tag_modified_at'), ['modified_at'], unique=False)

    # Prepare enums for Postgresql
    engine_name = op.get_bind().engine.name
    if engine_name == 'postgresql':
        op.execute('ALTER TYPE parkingsitetype RENAME TO _parkingsitetype')
        sa.Enum(*new_parking_site_types, name='parkingsitetype',
        ).create(op.get_bind())
        op.execute('ALTER TABLE parking_site ALTER COLUMN type type parkingsitetype using type::text::parkingsitetype;')
        sa.Enum(*old_parking_site_types, name='_parkingsitetype').drop(op.get_bind())

    with op.batch_alter_table('parking_site', schema=None) as batch_op:
        batch_op.alter_column(
            'type',
            existing_type=sa.Enum(*old_parking_site_types, name='parkingsitetype'),
            type_=sa.Enum(*new_parking_site_types, name='parkingsitetype'),
            existing_nullable=True,
        )
        batch_op.add_column(sa.Column('duplicate_of_parking_site_id', sa.BigInteger(), nullable=True))
        batch_op.add_column(sa.Column('photo_url', sa.String(length=4096), nullable=True))
        batch_op.create_foreign_key(
            batch_op.f('fk_parking_site_duplicate_of_parking_site_id'), 'parking_site', ['duplicate_of_parking_site_id'], ['id']
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tag_modified_at'))
        batch_op.drop_index(batch_op.f('ix_tag_created_at'))

    op.drop_table('tag')
    op.execute('ALTER TYPE parkingsitetype RENAME TO _parkingsitetype')
    sa.Enum(*old_parking_site_types, name='parkingsitetype').create(op.get_bind())
    op.execute('ALTER TABLE parking_site ALTER COLUMN type type parkingsitetype using type::text::parkingsitetype;')
    sa.Enum(*new_parking_site_types, name='_parkingsitetype').drop(op.get_bind())

    with op.batch_alter_table('parking_site', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_supervised', sa.Boolean(), autoincrement=False, nullable=True))
        batch_op.drop_column('related_location')
        batch_op.drop_column('supervision_type')
        batch_op.drop_column('is_covered')
        batch_op.drop_column('purpose')
        batch_op.alter_column(
            'type',
            existing_type=sa.Enum(*new_parking_site_types, name='parkingsitetype'),
            type_=sa.Enum(*old_parking_site_types, name='parkingsitetype'),
            existing_nullable=True,
        )

        batch_op.drop_constraint(batch_op.f('fk_parking_site_duplicate_of_parking_site_id'), type_='foreignkey')
        batch_op.drop_column('photo_url')
        batch_op.drop_column('duplicate_of_parking_site_id')

    # ### end Alembic commands ###
